swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          type: "string"
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          type: "string"
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile/{account–id}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User bank accounts
      description: API to visualize the user's transactions
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: account–id
          in: path
          description: account ID
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Account's informations retrieved successfully
          schema:
            $ref: "#/definitions/Account"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile/{account-id}/transactions/{transaction-itemId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User bank accounts
      description: API to fetch a transaction details
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: account-id
          in: path
          description: account ID
          required: true
          type: string
        - name: transaction-itemId
          in: path
          description: transaction ID
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction successfully retrieved
          schema:
            $ref: "#/definitions/TransactionExample"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User bank accounts
      description: API to add, edit or delete a transaction details
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: account-id
          in: path
          description: account ID
          required: true
          type: string
        - name: transaction-itemId
          in: path
          description: transaction ID
          required: true
          type: string
        - in: body
          name: body
          description: Transaction details
          required: true
          schema:
            $ref: "#/definitions/TransactionExample"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction successfully edited
          schema:
            $ref: "#/definitions/EditedTransactionMessageExample"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  Account:
    type: object
    properties:
      account-id:
        type: string
      body:
        $ref: "#/definitions/Transaction"
  Transaction:
    type: object
    properties:
      transactions:
        type: array
        items:
          type: object
          properties:
            transaction_itemId:
              type: number
            date:
              type: string
            description:
              type: string
            amount:
              type: number
            balance:
              type: number
            transaction_type:
              type: string
            category:
              type: string
            notes:
              type: string
  TransactionExample:
    type: object
    properties:
      transaction-itemId:
        type: string
        description: transaction's ID
        example: bsjch65jhe
      date:
        type: string
        format: date-time
        description: transaction's date
        example: "2020-06-20"
      description:
        type: string
        description: transaction's description
        example: Golden Sun Bakery
      amount:
        type: integer
        format: number
        description: transaction amount
        example: 50
      balance:
        type: integer
        format: number
        description: account's balance after this transaction
        example: 2187.79
      transaction_type:
        type: string
        description: transaction's type
        example: Electronic
      category:
        type: string
        description: transaction's category
        example: Food
      notes:
        type: string
        description: transaction's notes
        example: Kitchen appliances
  EditedTransactionMessageExample:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: Successfully edited
      data:
        $ref: "#/definitions/EditedTransactionExample"
  EditedTransactionExample:
    type: object
    properties:
      transaction-itemId:
        type: string
        description: transaction's ID
        example: bsjch65jhe
      date:
        type: string
        format: date-time
        description: transaction's date
        example: "2020-06-20"
      description:
        type: string
        description: transaction's description
        example: Golden Sun Bakery
      amount:
        type: integer
        format: number
        description: transaction amount
        example: 80
      balance:
        type: integer
        format: number
        description: account's balance after this transaction
        example: 2157.79
      transaction_type:
        type: string
        description: transaction's type
        example: Electronic
      category:
        type: string
        description: transaction's category
        example: Food
      notes:
        type: string
        description: transaction's notes
        example: New oven and two spatulas
